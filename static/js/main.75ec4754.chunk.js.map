{"version":3,"sources":["componentes/Inicio.js","componentes/Buscador.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","logo.svg"],"names":["Inicio","className","id","src","Logo","alt","title","style","width","margin","type","name","placeholder","to","pdfjs","GlobalWorkerOptions","workerSrc","version","Buscador","props","onDocumentLoadSuccess","numPages","setState","goToPrevPage","state","pageNumber","goToNextPage","this","archivo","nombreSeccion","docNombre","Container","fluid","Row","Col","md","categorias","map","categoria","key","onClick","categoriaClick","display","tituloSeccion","documentoClick","file","onLoadSuccess","textAlign","padding","Component","App","console","log","axios","get","then","res","data","window","scrollTo","top","behavior","basename","exact","path","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.75ec4754.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Logo from '../logo.svg';\nimport './Inicio.css';\n\nconst Inicio = () => {\n  return (\n    <header className=\"App-header\">\n      <div className=\"inicio\">\n        <div className=\"wrapper fadeInDown\">\n          <div id=\"formContent\">\n            <div className=\"fadeIn first\">\n              <img src={Logo} id=\"icon\" alt=\"Instituto Mexicano del Cemento y del Concreto A.C.\" title=\"Instituto Mexicano del Cemento y del Concreto A.C.\" style={{width: '200px',margin:'15px'}} />\n              <h3>BIBLIOTECA DIGITAL</h3>\n              <p>Instituto Mexicano del Cemento y del Concreto A.C.</p>\n            </div>\n            <form>\n              <input type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"login\" placeholder=\"Usuario\"/>\n              <input type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"login\" placeholder=\"Contraseña\"/>\n              <Link to=\"/buscador\" className=\"fadeIn fourth\">INGRESAR</Link>\n            </form>\n            <div id=\"formFooter\">\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n \nexport default Inicio;","import React, { Component } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Logo from '../logo.svg';\n\nimport './Buscador.css';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass Buscador extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      numPages: null, \n      pageNumber: 1\n    }\n  }\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n  };\n\n  goToPrevPage = () =>\n    this.setState(state => ({ pageNumber: state.pageNumber - 1 }));\n  goToNextPage = () =>\n    this.setState(state => ({ pageNumber: state.pageNumber + 1 }));\n\n  render() {\n    const { pageNumber, numPages } = this.state;\n    // Fibras%20de%20Acero\n    const archivo = `http://imcyc.com/ArchivosPDF/${this.props.nombreSeccion}/${this.props.docNombre}`;\n    return (  \n      <div className=\"Buscador\">\n        <Container fluid={true}>\n          <Row>\n            <Col md={12} className=\"text-center\">\n              <img src={Logo} id=\"icon\" alt=\"Instituto Mexicano del Cemento y del Concreto A.C.\" title=\"Instituto Mexicano del Cemento y del Concreto A.C.\" style={{width: '200px',margin:'15px'}} />\n              <p>Instituto Mexicano del Cemento y del Concreto A.C.</p>\n              <h3>ACERVO DIGITAL</h3>\n              <hr/>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={3}>\n              <ul className=\"categorias\">\n                {this.props.categorias.map((categoria, key) => (\n                  <li key={key} onClick={() => this.props.categoriaClick(categoria)}>{categoria}</li>\n                ))}\n              </ul>\n            </Col>\n            <Col md={9}>\n              <h2 style={{display: this.props.tituloSeccion ? 'block' : 'none'}}>DOCUMENTOS ENCONTRADOS</h2>\n              <h3 className=\"tituloseccion\" style={{display: this.props.tituloSeccion ? 'block' : 'none'}}>CATEGORÍA: {this.props.nombreSeccion}</h3>\n              <h3 className=\"docseccion\" style={{display: this.props.docNombre ? 'block' : 'none'}}>DOCUMENTO: {this.props.docNombre}</h3>\n              <hr style={{display: this.props.tituloSeccion ? 'block' : 'none'}} />\n              <ul className=\"documentos\" style={{display: this.props.docNombre ? 'none' : 'block'}}>\n                {this.props.categoria.map((categoria, key) => (\n                  <li key={key} onClick={() => this.props.documentoClick(categoria)}>{categoria}</li>\n                ))}\n              </ul>\n              <div style={{display: this.props.docNombre ? 'block' : 'none'}}>\n                <nav>\n                  <button onClick={this.goToPrevPage}>Anterior</button>\n                  <button onClick={this.goToNextPage}>Siguiente</button>\n                </nav>\n\n                <div style={{ width: '100%' }}>\n                  <Document\n                    file={archivo}\n                    onLoadSuccess={this.onDocumentLoadSuccess}\n                  >\n                    <Page pageNumber={pageNumber} width={600} />\n                  </Document>\n                </div>\n\n                <p style={{textAlign: 'center',padding: '10px'}}>\n                  Página: {pageNumber} of {numPages}\n                </p>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n \nexport default Buscador;","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport axios from 'axios';\nimport Inicio from './componentes/Inicio';\nimport Buscador from './componentes/Buscador';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    categorias: [],\n    categoria: [],\n    tituloSeccion: false,\n    nombreSeccion: '',\n    docNombre: ''\n  }\n\n  componentDidMount(){\n    axios.get(`http://imcyc.com/biblioteca/categorias.php`)\n      .then(res => {\n        const categorias = res.data;\n        this.setState({ categorias });\n      })\n  }\n\n  categoriaClick = (categoria) => {\n    console.log(categoria);\n    this.setState({\n      nombreSeccion: categoria,\n      docNombre: ''\n    })\n    axios.get(`http://imcyc.com/biblioteca/documento.php?categoria=${categoria}`)\n      .then(res => {\n        const categoria = res.data;\n        this.setState({ \n          categoria: categoria,\n          tituloSeccion: true\n        });\n      })\n    window.scrollTo({top: 0, behavior: 'smooth'});\n  }\n\n  documentoClick = (categoria) => {\n    console.log(categoria);\n    this.setState({\n      docNombre: categoria\n    });\n    window.scrollTo({top: 0, behavior: 'smooth'});\n  }\n\n  render() {\n    return (\n      <HashRouter basename='/'>\n          <div>\n              <Switch>\n                <Route \n                  exact \n                  path=\"/\" \n                  render={(props) => <Inicio {...props} \n                  />}\n                />\n                <Route \n                  exact \n                  path=\"/buscador\" \n                  render={(props) => <Buscador {...props} \n                    categorias={this.state.categorias}\n                    categoriaClick={this.categoriaClick}\n                    categoria={this.state.categoria}\n                    tituloSeccion={this.state.tituloSeccion}\n                    nombreSeccion={this.state.nombreSeccion}\n                    docNombre={this.state.docNombre}\n                    documentoClick={this.documentoClick}\n                    />}\n                />\n              </Switch>\n          </div>\n      </HashRouter>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter>\n  <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 31;","module.exports = __webpack_public_path__ + \"static/media/logo.c42aeac8.svg\";"],"sourceRoot":""}